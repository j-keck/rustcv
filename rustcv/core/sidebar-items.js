initSidebarItems({"enum":[["BorderType","Various border types, image boundaries are denoted with `|`."],["CompareType","Comparison type."],["CovarFlag","Covariation flags."],["CvType","Here is the `CvType` in an easy-to-read table."]],"fn":[["abs_diff","Calculates the per-element absolute difference between two arrays or between an array and a scalar."],["add","Calculates the per-element sum of two arrays or an array and a scalar."],["add_weighted","Calculates the weighted sum of two arrays (dst = src1*alpha + src2*beta + gamma)."],["batch_distance","A naive nearest neighbor finder."],["bitwise_and","Computes bitwise conjunction of the two arrays (dst = src1 & src2)."],["bitwise_not","Inverts every bit of an array (dst = !src)."],["bitwise_or","Computes bitwise disjunction of the two arrays (dst = src1 | src2)."],["bitwise_xor","Computes bitwise \"exclusive or\" of the two arrays (dst = src1 ^ src2)."],["border_interpolate","Computes the source location of an extrapolated pixel."],["calc_covar_matrix","Calculates the covariance matrix of a set of vectors."],["cart_to_polar","Calculates the magnitude and angle of 2D vectors."],["compare","Performs the per-element comparison of two arrays or an array and scalar value."],["complete_symm","Copies the lower or the upper half of a square matrix to its another half."],["convert_scale_abs","Scales, calculates absolute values, and converts the result to 8-bit."],["copy_make_border","Forms a border around an image."],["count_non_zero","Counts non-zero array elements."],["min_max_loc","Finds the global minimum and maximum in an array."]],"struct":[["KeyPoint",""],["Mat","The class `Mat` represents an n-dimensional dense numerical single-channel or multi-channel array. It can be used to store real or complex-valued vectors and matrices, grayscale or color images, voxel volumes, vector fields, point clouds, tensors, histograms"],["Point",""],["Rect",""],["Scalar",""],["Size",""]]});